name: publish-npm
on:
  push:
    tags:
      # Only run on tags that match semver
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  publish:
    name: Publish to NPM & GitHub Package Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    environment: main
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: main
          persist-credentials: false
      # limit releases to version changes - https://github.com/EndBug/version-check
      - name: Check version changes
        uses: EndBug/version-check@5102328418c0130d66ca712d755c303e93368ce2
        id: version_check
        with:
          file-url: https://unpkg.com/@grafana/azure-sdk@latest/package.json
          static-checking: localIsNew

      - name: Version update detected
        if: steps.version_check.outputs.changed == 'true'
        env:
          VERSION: ${{ steps.version_check.outputs.version }}
          TYPE: ${{ steps.version_check.outputs.type }}
        run: 'echo "Version change found! New version: ${VERSION} (${TYPE})"'

      - name: Setup .npmrc file for NPM registry
        if: steps.version_check.outputs.changed == 'true'
        uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          registry-url: "https://registry.npmjs.org"
          package-manager-cache: false

      - name: Install dependencies
        if: steps.version_check.outputs.changed == 'true'
        run: yarn

      - name: Build library
        if: steps.version_check.outputs.changed == 'true'
        run: yarn build

      - name: Publish package to NPM
        if: steps.version_check.outputs.changed == 'true'
        run: npm publish --access public --scope grafana

      - name: Setup .npmrc file for GitHub Packages
        if: steps.version_check.outputs.changed == 'true'
        uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          registry-url: "https://npm.pkg.github.com"
          scope: "@grafana"
          package-manager-cache: false

      - name: Publish package to Github Packages
        if: steps.version_check.outputs.changed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
